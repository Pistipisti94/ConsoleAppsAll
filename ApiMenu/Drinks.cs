    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using ApiMenu;
//
//    var drinks = Drinks.FromJson(jsonString);

namespace ApiMenu
{
    public partial class Drinks
    {
        [JsonProperty("drinks", Required = Required.Always)]
        public Dictionary<string, string>[] DrinksDrinks { get; set; }
    }


    public partial class Drinks
    {
        public static Drinks FromJson(string json) => JsonConvert.DeserializeObject<Drinks>(json, ApiMenu.DrinksConverter.Settings);
    }

    public static class DrinksSerialize
    {
        public static string ToJson(this Drinks self) => JsonConvert.SerializeObject(self, ApiMenu.DrinksConverter.Settings);
    }

    internal static class DrinksConverter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
